{"version":3,"sources":["components/contactPicker/ContactPicker.js","components/appointmentForm/AppointmentForm.js","components/tile/Tile.js","components/tileList/TileList.js","containers/appointmentsPage/AppointmentsPage.js","components/contactForm/ContactForm.js","containers/contactsPage/ContactsPage.js","App.js","index.js"],"names":["ContactPicker","contacts","contact","setContact","name","id","onChange","value","required","disabled","map","AppointmentForm","title","setTitle","date","setDate","time","setTime","handleSubmit","onSubmit","type","placeholder","min","Date","toLocaleDateString","split","month","day","year","padStart","getTodayString","Tile","data","dataKeys","Object","keys","dataValues","values","generateClassName","i","className","TileList","list","obj","AppointmentsPage","appointments","addAppointment","useState","target","e","preventDefault","ContactForm","setName","phone","setPhone","email","setEmail","pattern","ContactsPage","addContact","hasDuplicate","length","toLowerCase","useEffect","App","setContacts","setAppointment","ROUTES","basename","to","activeClassName","exact","path","appointment","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b89837f0.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst ContactPicker = ({ contacts, contact, setContact }) => {\r\n  if (!contacts) return (\r\n    <select name=\"contact\" id=\"contact-select\"\r\n    onChange={setContact} value={contact} required>\r\n      <option value=\"*\" disabled>-- Select a contact --</option>\r\n    </select>\r\n  );\r\n  return (\r\n    <select name=\"contact\" id=\"contact-select\"\r\n    onChange={setContact} value={contact} required>\r\n      <option value=\"*\" disabled>-- Select a contact --</option>\r\n      {contacts.map(contact=>{\r\n        return (\r\n          <option value={contact.name}>{contact.name}</option>\r\n        )\r\n      })}\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default ContactPicker;\r\n","import ContactPicker from '../contactPicker/ContactPicker';\r\n\r\nconst AppointmentForm = ({\r\n  contacts,\r\n  title,\r\n  setTitle,\r\n  contact,\r\n  setContact,\r\n  date,\r\n  setDate,\r\n  time,\r\n  setTime,\r\n  handleSubmit\r\n}) => {\r\n  const getTodayString = () => {\r\n    const [month, day, year] = new Date()\r\n      .toLocaleDateString(\"en-US\")\r\n      .split(\"/\");\r\n    return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" name=\"title\" id=\"title\" placeholder=\"Title\"\r\n        value={title} onChange={setTitle} required\r\n      />\r\n      <ContactPicker\r\n        contacts={contacts}\r\n        contact={contact}\r\n        setContact={setContact}\r\n      />\r\n      <input type=\"date\" name=\"date\" id=\"date\" min={getTodayString()}\r\n        value={date} onChange={setDate} required\r\n      />\r\n      <input type=\"time\" name=\"time\" id=\"time\"\r\n        value={time} onChange={setTime} required\r\n      />\r\n      <input type=\"submit\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AppointmentForm;\r\n","import React from \"react\";\r\n\r\nconst Tile = ({ data }) => {\r\n  const dataKeys = Object.keys(data)\r\n  const dataValues = Object.values(data)\r\n  const generateClassName = i => i===0 ? \"tile tile-title\" : \"tile\";\r\n\r\n  return (\r\n    <div className=\"tile-container\">\r\n      {dataValues.map((value, i) =>\r\n        <p\r\n          className={generateClassName(i)}\r\n          key={`${dataKeys[i]}-${i}`}>{value}\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tile;\r\n","import React from \"react\";\r\nimport Tile from \"../tile/Tile\";\r\n\r\nexport const TileList = ({ list }) => {\r\n  return (\r\n    <div>\r\n      {list.map(obj => {\r\n        return (\r\n          <Tile data={obj} />\r\n        )\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport AppointmentForm from \"../../components/appointmentForm/AppointmentForm\";\r\nimport { TileList } from \"../../components/tileList/TileList\";\r\n\r\nexport const AppointmentsPage =\r\n({ appointments, contacts, addAppointment }) => {\r\n  // Define state variables for appointment info\r\n  const [title, setTitle] = useState(\"\");\r\n  const [contact, setContact] = useState(\"*\");\r\n  const [date, setDate] = useState(\"\");\r\n  const [time, setTime] = useState(\"\");\r\n\r\n  const handleTitleChange = ({ target }) => setTitle(target.value);\r\n  const handleContactChange = ({ target }) => setContact(target.value);\r\n  const handleDateChange = ({ target }) => setDate(target.value);\r\n  const handleTimeChange = ({ target }) => setTime(target.value);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!title || !contact || contact===\"*\" || !date || !time) return;\r\n    addAppointment({\r\n      title: title,\r\n      contact: contact,\r\n      date: date,\r\n      time: time\r\n    })\r\n    setTitle(\"\");\r\n    setContact(\"*\");\r\n    setDate(\"\");\r\n    setTime(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Add Appointment</h2>\r\n        <AppointmentForm\r\n          title={title}\r\n          setTitle={handleTitleChange}\r\n          contacts={contacts}\r\n          contact={contact}\r\n          setContact={handleContactChange}\r\n          date={date}\r\n          setDate={handleDateChange}\r\n          time={time}\r\n          setTime={handleTimeChange}\r\n          handleSubmit={handleSubmit}\r\n        />\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Appointments</h2>\r\n        <TileList\r\n          list={appointments}\r\n        />\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","export const ContactForm = ({\r\n  name,\r\n  setName,\r\n  phone,\r\n  setPhone,\r\n  email,\r\n  setEmail,\r\n  handleSubmit\r\n}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Name\"\r\n        value={name} onChange={setName}\r\n      />\r\n      <input\r\n        type=\"tel\" name=\"phone\" id=\"phone\" placeholder=\"Phone\"\r\n        pattern=\"(\\()?(\\+?((\\d{1,2}-?)?\\d{1,4}\\s?)?)([1-9]\\d{2}\\)?[-.\\s]?)(\\d{3}[-.\\s]?)(\\d{4})\"\r\n        // (\\()?                            (?\r\n        // (\\+?((\\d{1,2}-?)?\\d{1,4}\\s?)?)   Country Code\r\n          //  \\+?                             +?\r\n          //  ((\\d{1,2}-?)?\\d{1,4}\\s?)?       Country code digits?\r\n            //  (\\d{1,2}-?)?                    2 digit prefix?\r\n            //  \\d{1,4}                         1-4 digits\r\n            //  \\s?                             Separator?\r\n        // ([1-9]\\d{2}\\)?[-.\\s]?)           First 3 digits (1 digit must be [1-9]) + Separator\r\n        // (\\d{3}[-.\\s]?)                   First 3 digits + Separator\r\n        // (\\d{4})                         Last 4 digits\r\n        value={phone} onChange={setPhone}\r\n      />\r\n      <input type=\"email\" name=\"email\" id=\"email\"\r\n        placeholder=\"Email\"\r\n        pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}\"\r\n        value={email} onChange={setEmail}\r\n      />\r\n      <input type=\"submit\" />\r\n    </form>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { ContactForm } from \"../../components/contactForm/ContactForm\";\r\nimport { TileList } from \"../../components/tileList/TileList\";\r\n\r\nexport const ContactsPage = ({ contacts, addContact}) => {\r\n  // Define state variables for contact info and duplicate check\r\n  const [ name, setName ] = useState(\"\");\r\n  const [ phone, setPhone ] = useState(\"\");\r\n  const [ email, setEmail ] = useState(\"\");\r\n  \r\n  const hasDuplicate = () => {\r\n    for (let i=0; i<contacts.length; ++i){\r\n      if (contacts[i].name.toLowerCase() === name.toLowerCase()){\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleNameChange = ({ target }) => setName(target.value);\r\n  const handlePhoneChange = ({ target }) => setPhone(target.value);\r\n  const handleEmailChange = ({ target }) => setEmail(target.value);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (hasDuplicate()) return;\r\n    if (!name || !phone || !email) return;\r\n    addContact ({\r\n      name: name,\r\n      phone: phone,\r\n      email: email\r\n    })\r\n    setName(\"\");\r\n    setPhone(\"\");\r\n    setEmail(\"\");\r\n  };\r\n\r\n  // Using hooks, check for contact name in the contacts array variable in props\r\n  useEffect(()=>{\r\n    hasDuplicate();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [name])\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Add Contact</h2>\r\n        <ContactForm\r\n          name={name}\r\n          setName={handleNameChange}\r\n          phone={phone}\r\n          setPhone={handlePhoneChange}\r\n          email={email}\r\n          setEmail={handleEmailChange}\r\n          handleSubmit={handleSubmit}\r\n        />\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Contacts</h2>\r\n        <TileList\r\n          list={contacts}\r\n        />\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Redirect, NavLink } from \"react-router-dom\";\r\n\r\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\n\r\nfunction App() {\r\n  // Define state variables for contacts and appointments\r\n  const [contacts, setContacts] = useState([]);\r\n  const [appointments, setAppointment] = useState([]);\r\n\r\n  const ROUTES = {\r\n    CONTACTS: \"/contacts\",\r\n    APPOINTMENTS: \"/appointments\",\r\n  };\r\n\r\n  // Implement functions to add data to contacts and appointments\r\n  const addContact = contact => setContacts([...contacts, contact]);\r\n  const addAppointment = appointment =>\r\n    setAppointment([...appointments, appointment])\r\n\r\n\r\n  return (\r\n    <Router basename=\"/codecademy-react-booked\">\r\n      <nav>\r\n        <NavLink to={ROUTES.CONTACTS} activeClassName=\"active\">\r\n          Contacts\r\n        </NavLink>\r\n        <NavLink to={ROUTES.APPOINTMENTS} activeClassName=\"active\">\r\n          Appointments\r\n        </NavLink>\r\n      </nav>\r\n      <main>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to={ROUTES.CONTACTS} />\r\n          </Route>\r\n          <Route path={ROUTES.CONTACTS}>\r\n            <ContactsPage\r\n              contacts={contacts}\r\n              addContact={addContact}\r\n            />\r\n          </Route>\r\n          <Route path={ROUTES.APPOINTMENTS}>\r\n            <AppointmentsPage\r\n              appointments={appointments}\r\n              contacts={contacts}\r\n              addAppointment={addAppointment}\r\n            />\r\n          </Route>\r\n        </Switch>\r\n      </main>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}